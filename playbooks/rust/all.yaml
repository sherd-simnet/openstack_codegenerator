---
- hosts: all
  roles:
    - "ensure-rust"
  vars:
    rust_project_dir: "{{ ansible_user_dir }}/openstack"
    rust_sdk_git_repo: "https://github.com/gtema/openstack"
    patch_path: "{{ ansible_user_dir }}/{{ zuul.change }}.patch"
  tasks:
    - name: "Generate Rust code"
      ansible.builtin.include_role:
        name: codegenerator
      vars:
        codegenerator_target: "{{ zj_item.1 }}"
        codegenerator_metadata: "{{ zj_item.0.metadata }}"
        codegenerator_service_type: "{{ zj_item.0.service }}"
      loop: "{{ codegenerator_service_metadata_target_map | subelements('targets') }}"
      loop_control:
        loop_var: zj_item

    - name: "Checkout target repository"
      ansible.builtin.git:
        repo: "{{ rust_sdk_git_repo }}"
        dest: "{{ rust_project_dir }}"

#    - name: Compile
#      ansible.builtin.command:
#        cmd: "cargo build"
#        chdir: "{{ rust_project_dir }}"

    - name: "Overwrite generated files"
      ansible.builtin.copy:
        src: "{{ codegenerator_base_dir }}/wrk/rust/"
        dest: "{{ rust_project_dir }}"
        remote_src: True

#    - name: Overwrite generated files
#      ansible.builtin.include_role:
#        name: copy_rust_code
#      vars:
#        rust_targets: "{{ zj_item.targets }}"
#        rust_metadata: "{{ zj_item.metadata }}"
#        rust_service_type: "{{ zj_item.service | replace('-', '_') | lower }}"
#      loop: "{{ codegenerator_service_metadata_target_map }}"
#      loop_control:
#        loop_var: zj_item

#    - name: Compile
#      ansible.builtin.command:
#        cmd: "cargo build"
#        chdir: "{{ rust_project_dir }}"

    - name: "Checkout new branch"
      ansible.builtin.command:
        cmd: "git checkout -b codegenerator_{{ zuul.change }}"
        chdir: "{{ rust_project_dir }}"

    - name: "Configure git username"
      ansible.builtin.command: "git config --global user.name 'OpenStack codegenerator'"

    - name: "Configure git email"
      ansible.builtin.command: "git config --global user.email 16461884+gtema@users.noreply.github.com"

    - name: "Stage files for commit"
      ansible.builtin.command:
        cmd: "git add ."
        chdir: "{{ rust_project_dir }}"

    - name: "Git status"
      ansible.builtin.command:
        cmd: "git status"
        chdir: "{{ rust_project_dir }}"

    - name: "Commit changes"
      ansible.builtin.command:
        cmd: "git commit -m 'feat: New generated content' -m '{{ zuul.change_message }}'"
        chdir: "{{ rust_project_dir }}"

    - name: "Format patch"
      ansible.builtin.command:
        cmd: "git format-patch -1 --output {{ patch_path }}"
        chdir: "{{ rust_project_dir }}"

    - name: "Collect artifacts"
      synchronize:
        dest: "{{ zj_output.dest }}"
        mode: "pull"
        src: "{{ zj_output.src }}"
        verify_host: true
        owner: false
        group: false
      loop:
        - dest: "{{ zuul.executor.work_root }}/artifacts"
          src: "{{ patch_path }}"
      loop_control:
        loop_var: zj_output
